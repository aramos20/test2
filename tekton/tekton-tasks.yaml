apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: git-clone-task
spec:
  params:
    - name: url
      description: The URL of the Git repository to clone.
      type: string
      default: "https://github.com/aramos20/test2.git"
    - name: revision
      description: The revision (branch, tag, or SHA) to checkout.
      type: string
      default: "main"
  workspaces:
    - name: output
      mountPath: /workspace
  steps:
    - name: clone
      image: alpine/git:latest
      workingDir: /workspace
      script: |
        #!/bin/sh
        set -e
        rm -rf /workspace/* /workspace/.[!.]*
        git clone $(params.url) .
        git checkout $(params.revision)
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-and-push-task
spec:
  params:
    - name: IMAGE
      description: The Docker image name to build and push.
      type: string
      default: "docker.io/aramos20/myapi:latest"
    - name: CONTEXT_DIR
      description: The directory containing the Dockerfile.
      type: string
      default: "app"
  workspaces:
    - name: source
      mountPath: /workspace
  steps:
    - name: kaniko-build-and-push
      image: grc.io/kaniko-project/executor:debug
      workingDir: /workspace
      command:
        - /kaniko/executor
      args:
        - --dockerfile=$(params.CONTEXT_DIR)/Dockerfile
        - --context=/workspace
        - --destination=$(params.IMAGE)
        - --verbosity=debug
      volumeMounts:
        - name: kaniko-secret
          mountPath: /kaniko/.docker
  volumes:
    - name: kaniko-secret
      secret:
        secretName: regcred
        items:
          - key: .dockerconfigjson
            path: config.json
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-task
spec:
  params:
    - name: MANIFEST_DIR
      description: directory where the manifests are.
      type: string
      default: "k8s"
  workspaces:
    - name: source
      mountPath: /workspace
  steps:
    - name: copy-manifests
      image: alpine/git:latest
      workingDir: /workspace
      script: |
        #!/bin/sh
        set -e
        cp -r $(params.MANIFEST_DIR)/* .

    - name: deploy
      image: bitnami/kubectl:latest
      workingDir: /workspace
      script: |
        #!/bin/sh
        set -e
        kubectl apply -f .
